// Generated by Dagger (https://dagger.dev).
package ru.brazhnik.voicetext.data.repository;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SpeechAnalyzerRepository_Factory implements Factory<SpeechAnalyzerRepository> {
  private final Provider<Context> contextProvider;

  private final Provider<CoroutineDispatcher> dispatcherProvider;

  public SpeechAnalyzerRepository_Factory(Provider<Context> contextProvider,
      Provider<CoroutineDispatcher> dispatcherProvider) {
    this.contextProvider = contextProvider;
    this.dispatcherProvider = dispatcherProvider;
  }

  @Override
  public SpeechAnalyzerRepository get() {
    return newInstance(contextProvider.get(), dispatcherProvider.get());
  }

  public static SpeechAnalyzerRepository_Factory create(Provider<Context> contextProvider,
      Provider<CoroutineDispatcher> dispatcherProvider) {
    return new SpeechAnalyzerRepository_Factory(contextProvider, dispatcherProvider);
  }

  public static SpeechAnalyzerRepository newInstance(Context context,
      CoroutineDispatcher dispatcher) {
    return new SpeechAnalyzerRepository(context, dispatcher);
  }
}
